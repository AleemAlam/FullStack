{"ast":null,"code":"import { teacherNetworkRequest } from \"../../Network/network\";\nimport { GET_TEACHER_REQUEST, GET_TEACHER_SUCCESS, GET_TEACHER_FAILED } from \"./actionType\";\nexport const getTeacher = token => dispatch => {\n  dispatch(getTeacherRequest(token));\n  teacherNetworkRequest().then(res => dispatch(getTeacherSuccess(res.data))).catch(() => dispatch(getTeacherFailed()));\n};\n\nconst getTeacherRequest = () => {\n  return {\n    type: GET_TEACHER_REQUEST\n  };\n};\n\nconst getTeacherSuccess = payload => {\n  return {\n    type: GET_TEACHER_SUCCESS,\n    payload\n  };\n};\n\nconst getTeacherFailed = () => {\n  return {\n    type: GET_TEACHER_FAILED\n  };\n};","map":{"version":3,"sources":["/home/ellu/Practice/fullStackPractice/frontend/src/Redux/app/action.js"],"names":["teacherNetworkRequest","GET_TEACHER_REQUEST","GET_TEACHER_SUCCESS","GET_TEACHER_FAILED","getTeacher","token","dispatch","getTeacherRequest","then","res","getTeacherSuccess","data","catch","getTeacherFailed","type","payload"],"mappings":"AAAA,SAASA,qBAAT,QAAsC,uBAAtC;AACA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAYC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACC,iBAAiB,CAACF,KAAD,CAAlB,CAAR;AACAL,EAAAA,qBAAqB,GAClBQ,IADH,CACSC,GAAD,IAASH,QAAQ,CAACI,iBAAiB,CAACD,GAAG,CAACE,IAAL,CAAlB,CADzB,EAEGC,KAFH,CAES,MAAMN,QAAQ,CAACO,gBAAgB,EAAjB,CAFvB;AAGD,CALM;;AAOP,MAAMN,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AAAEO,IAAAA,IAAI,EAAEb;AAAR,GAAP;AACD,CAFD;;AAIA,MAAMS,iBAAiB,GAAIK,OAAD,IAAa;AACrC,SAAO;AAAED,IAAAA,IAAI,EAAEZ,mBAAR;AAA6Ba,IAAAA;AAA7B,GAAP;AACD,CAFD;;AAIA,MAAMF,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAP;AACD,CAFD","sourcesContent":["import { teacherNetworkRequest } from \"../../Network/network\";\nimport {\n  GET_TEACHER_REQUEST,\n  GET_TEACHER_SUCCESS,\n  GET_TEACHER_FAILED,\n} from \"./actionType\";\n\nexport const getTeacher = (token) => (dispatch) => {\n  dispatch(getTeacherRequest(token));\n  teacherNetworkRequest()\n    .then((res) => dispatch(getTeacherSuccess(res.data)))\n    .catch(() => dispatch(getTeacherFailed()));\n};\n\nconst getTeacherRequest = () => {\n  return { type: GET_TEACHER_REQUEST };\n};\n\nconst getTeacherSuccess = (payload) => {\n  return { type: GET_TEACHER_SUCCESS, payload };\n};\n\nconst getTeacherFailed = () => {\n  return { type: GET_TEACHER_FAILED };\n};\n"]},"metadata":{},"sourceType":"module"}