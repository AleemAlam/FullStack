{"ast":null,"code":"import { teacherNetworkRequest, classNetworkRequest } from \"../../Network/network\";\nimport { GET_TEACHER_REQUEST, GET_TEACHER_SUCCESS, GET_TEACHER_FAILED, GET_CLASS_REQUEST, GET_CLASS_SUCCESS, GET_CLASS_FAILED } from \"./actionType\";\nexport const getTeacher = token => dispatch => {\n  dispatch(getTeacherRequest());\n  teacherNetworkRequest(token).then(res => dispatch(getTeacherSuccess(res.data))).catch(() => dispatch(getTeacherFailed()));\n};\n\nconst getTeacherRequest = () => {\n  return {\n    type: GET_TEACHER_REQUEST\n  };\n};\n\nconst getTeacherSuccess = payload => {\n  return {\n    type: GET_TEACHER_SUCCESS,\n    payload\n  };\n};\n\nconst getTeacherFailed = () => {\n  return {\n    type: GET_TEACHER_FAILED\n  };\n};\n\nexport const getClass = (token, id) => dispatch => {\n  dispatch(getClassRequest());\n  classNetworkRequest(token, id).then(res => dispatch(getClassSuccess(res.data))).catch(() => dispatch(getClassFailed()));\n};\n\nconst getClassRequest = () => {\n  return {\n    type: GET_CLASS_REQUEST\n  };\n};\n\nconst getClassSuccess = payload => {\n  return {\n    type: GET_CLASS_SUCCESS,\n    payload\n  };\n};\n\nconst getClassFailed = () => {\n  return {\n    type: GET_CLASS_FAILED\n  };\n};","map":{"version":3,"sources":["/home/ellu/Practice/fullStackPractice/frontend/src/Redux/app/action.js"],"names":["teacherNetworkRequest","classNetworkRequest","GET_TEACHER_REQUEST","GET_TEACHER_SUCCESS","GET_TEACHER_FAILED","GET_CLASS_REQUEST","GET_CLASS_SUCCESS","GET_CLASS_FAILED","getTeacher","token","dispatch","getTeacherRequest","then","res","getTeacherSuccess","data","catch","getTeacherFailed","type","payload","getClass","id","getClassRequest","getClassSuccess","getClassFailed"],"mappings":"AAAA,SACEA,qBADF,EAEEC,mBAFF,QAGO,uBAHP;AAIA,SACEC,mBADF,EAEEC,mBAFF,EAGEC,kBAHF,EAIEC,iBAJF,EAKEC,iBALF,EAMEC,gBANF,QAOO,cAPP;AASA,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAYC,QAAD,IAAc;AACjDA,EAAAA,QAAQ,CAACC,iBAAiB,EAAlB,CAAR;AACAX,EAAAA,qBAAqB,CAACS,KAAD,CAArB,CACGG,IADH,CACSC,GAAD,IAASH,QAAQ,CAACI,iBAAiB,CAACD,GAAG,CAACE,IAAL,CAAlB,CADzB,EAEGC,KAFH,CAES,MAAMN,QAAQ,CAACO,gBAAgB,EAAjB,CAFvB;AAGD,CALM;;AAOP,MAAMN,iBAAiB,GAAG,MAAM;AAC9B,SAAO;AAAEO,IAAAA,IAAI,EAAEhB;AAAR,GAAP;AACD,CAFD;;AAIA,MAAMY,iBAAiB,GAAIK,OAAD,IAAa;AACrC,SAAO;AAAED,IAAAA,IAAI,EAAEf,mBAAR;AAA6BgB,IAAAA;AAA7B,GAAP;AACD,CAFD;;AAIA,MAAMF,gBAAgB,GAAG,MAAM;AAC7B,SAAO;AAAEC,IAAAA,IAAI,EAAEd;AAAR,GAAP;AACD,CAFD;;AAIA,OAAO,MAAMgB,QAAQ,GAAG,CAACX,KAAD,EAAQY,EAAR,KAAgBX,QAAD,IAAc;AACnDA,EAAAA,QAAQ,CAACY,eAAe,EAAhB,CAAR;AACArB,EAAAA,mBAAmB,CAACQ,KAAD,EAAQY,EAAR,CAAnB,CACGT,IADH,CACSC,GAAD,IAASH,QAAQ,CAACa,eAAe,CAACV,GAAG,CAACE,IAAL,CAAhB,CADzB,EAEGC,KAFH,CAES,MAAMN,QAAQ,CAACc,cAAc,EAAf,CAFvB;AAGD,CALM;;AAOP,MAAMF,eAAe,GAAG,MAAM;AAC5B,SAAO;AAAEJ,IAAAA,IAAI,EAAEb;AAAR,GAAP;AACD,CAFD;;AAIA,MAAMkB,eAAe,GAAIJ,OAAD,IAAa;AACnC,SAAO;AAAED,IAAAA,IAAI,EAAEZ,iBAAR;AAA2Ba,IAAAA;AAA3B,GAAP;AACD,CAFD;;AAIA,MAAMK,cAAc,GAAG,MAAM;AAC3B,SAAO;AAAEN,IAAAA,IAAI,EAAEX;AAAR,GAAP;AACD,CAFD","sourcesContent":["import {\n  teacherNetworkRequest,\n  classNetworkRequest,\n} from \"../../Network/network\";\nimport {\n  GET_TEACHER_REQUEST,\n  GET_TEACHER_SUCCESS,\n  GET_TEACHER_FAILED,\n  GET_CLASS_REQUEST,\n  GET_CLASS_SUCCESS,\n  GET_CLASS_FAILED,\n} from \"./actionType\";\n\nexport const getTeacher = (token) => (dispatch) => {\n  dispatch(getTeacherRequest());\n  teacherNetworkRequest(token)\n    .then((res) => dispatch(getTeacherSuccess(res.data)))\n    .catch(() => dispatch(getTeacherFailed()));\n};\n\nconst getTeacherRequest = () => {\n  return { type: GET_TEACHER_REQUEST };\n};\n\nconst getTeacherSuccess = (payload) => {\n  return { type: GET_TEACHER_SUCCESS, payload };\n};\n\nconst getTeacherFailed = () => {\n  return { type: GET_TEACHER_FAILED };\n};\n\nexport const getClass = (token, id) => (dispatch) => {\n  dispatch(getClassRequest());\n  classNetworkRequest(token, id)\n    .then((res) => dispatch(getClassSuccess(res.data)))\n    .catch(() => dispatch(getClassFailed()));\n};\n\nconst getClassRequest = () => {\n  return { type: GET_CLASS_REQUEST };\n};\n\nconst getClassSuccess = (payload) => {\n  return { type: GET_CLASS_SUCCESS, payload };\n};\n\nconst getClassFailed = () => {\n  return { type: GET_CLASS_FAILED };\n};\n"]},"metadata":{},"sourceType":"module"}