{"ast":null,"code":"var _jsxFileName = \"/home/ellu/Practice/fullStackPractice/frontend/src/Pages/Dashboard.jsx\";\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  // const { product, isError, isLoading, isAuth } = useSelector((state) => ({\n  //   product: state.app.product,\n  //   isLoading: state.app.isLoading,\n  //   isError: state.app.isError,\n  //   isAuth: state.auth.isAuth,\n  // }));\n  // const handleAddToCart = (item) => {\n  //   dispatch(addProductCart(item));\n  // };\n  // const dispatch = useDispatch();\n  // useEffect(() => {\n  //   dispatch(getProduct());\n  //   if (isAuth) {\n  //     dispatch(getOldProduct());\n  //   }\n  // }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/ellu/Practice/fullStackPractice/frontend/src/Pages/Dashboard.jsx"],"names":["React","useEffect","useDispatch","useSelector","Dashboard","display","flexWrap"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B;AAAZ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;KAjCuBF,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nexport default function Dashboard() {\n  // const { product, isError, isLoading, isAuth } = useSelector((state) => ({\n  //   product: state.app.product,\n  //   isLoading: state.app.isLoading,\n  //   isError: state.app.isError,\n  //   isAuth: state.auth.isAuth,\n  // }));\n\n  // const handleAddToCart = (item) => {\n  //   dispatch(addProductCart(item));\n  // };\n\n  // const dispatch = useDispatch();\n\n  // useEffect(() => {\n  //   dispatch(getProduct());\n  //   if (isAuth) {\n  //     dispatch(getOldProduct());\n  //   }\n  // }, []);\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {/* {product.map((pro) => (\n        <StyledProductCard key={pro.id}>\n          <img src={pro.image} alt={pro.name} />\n          <h1>Name: {pro.title}</h1>\n          <h3>Category: {pro.category}</h3>\n          <h3>Rating: {pro.rating}</h3>\n          <button onClick={() => handleAddToCart(pro)}>Add To Cart</button>\n        </StyledProductCard>\n      ))} */}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}