{"ast":null,"code":"var _jsxFileName = \"/home/ellu/Practice/fullStackPractice/frontend/src/Pages/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addProductCart, getProduct } from \"../Redux/app/action\";\nimport { getOldProduct } from \"../Redux/auth/action\";\nimport { StyledProductCard } from \"../Styled/styledComponents\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Dashboard() {\n  _s();\n\n  const {\n    product,\n    isError,\n    isLoading,\n    isAuth\n  } = useSelector(state => ({\n    product: state.app.product,\n    isLoading: state.app.isLoading,\n    isError: state.app.isError,\n    isAuth: state.auth.isAuth\n  }));\n\n  const handleAddToCart = item => {\n    dispatch(addProductCart(item));\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProduct());\n\n    if (isAuth) {\n      dispatch(getOldProduct());\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\",\n      flexWrap: \"wrap\"\n    },\n    children: product.map(pro => /*#__PURE__*/_jsxDEV(StyledProductCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: pro.image,\n        alt: pro.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: [\"Name: \", pro.title]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Category: \", pro.category]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Rating: \", pro.rating]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleAddToCart(pro),\n        children: \"Add To Cart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, pro.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Dashboard, \"ICOT/3NE9wNlZ7P04zY4h6xjETQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/ellu/Practice/fullStackPractice/frontend/src/Pages/Dashboard.jsx"],"names":["React","useEffect","useDispatch","useSelector","addProductCart","getProduct","getOldProduct","StyledProductCard","Dashboard","product","isError","isLoading","isAuth","state","app","auth","handleAddToCart","item","dispatch","display","flexWrap","map","pro","image","name","title","category","rating","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,EAAyBC,UAAzB,QAA2C,qBAA3C;AACA,SAASC,aAAT,QAA8B,sBAA9B;AACA,SAASC,iBAAT,QAAkC,4BAAlC;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAClC,QAAM;AAAEC,IAAAA,OAAF;AAAWC,IAAAA,OAAX;AAAoBC,IAAAA,SAApB;AAA+BC,IAAAA;AAA/B,MAA0CT,WAAW,CAAEU,KAAD,KAAY;AACtEJ,IAAAA,OAAO,EAAEI,KAAK,CAACC,GAAN,CAAUL,OADmD;AAEtEE,IAAAA,SAAS,EAAEE,KAAK,CAACC,GAAN,CAAUH,SAFiD;AAGtED,IAAAA,OAAO,EAAEG,KAAK,CAACC,GAAN,CAAUJ,OAHmD;AAItEE,IAAAA,MAAM,EAAEC,KAAK,CAACE,IAAN,CAAWH;AAJmD,GAAZ,CAAD,CAA3D;;AAOA,QAAMI,eAAe,GAAIC,IAAD,IAAU;AAChCC,IAAAA,QAAQ,CAACd,cAAc,CAACa,IAAD,CAAf,CAAR;AACD,GAFD;;AAIA,QAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACAD,EAAAA,SAAS,CAAC,MAAM;AACdiB,IAAAA,QAAQ,CAACb,UAAU,EAAX,CAAR;;AACA,QAAIO,MAAJ,EAAY;AACVM,MAAAA,QAAQ,CAACZ,aAAa,EAAd,CAAR;AACD;AACF,GALQ,EAKN,EALM,CAAT;AAMA,sBACE;AAAK,IAAA,KAAK,EAAE;AAAEa,MAAAA,OAAO,EAAE,MAAX;AAAmBC,MAAAA,QAAQ,EAAE;AAA7B,KAAZ;AAAA,cACGX,OAAO,CAACY,GAAR,CAAaC,GAAD,iBACX,QAAC,iBAAD;AAAA,8BACE;AAAK,QAAA,GAAG,EAAEA,GAAG,CAACC,KAAd;AAAqB,QAAA,GAAG,EAAED,GAAG,CAACE;AAA9B;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,6BAAWF,GAAG,CAACG,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA,iCAAeH,GAAG,CAACI,QAAnB;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE;AAAA,+BAAaJ,GAAG,CAACK,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAQ,QAAA,OAAO,EAAE,MAAMX,eAAe,CAACM,GAAD,CAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF;AAAA,OAAwBA,GAAG,CAACM,EAA5B;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAhCuBpB,S;UAC0BL,W,EAW/BD,W;;;KAZKM,S","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { addProductCart, getProduct } from \"../Redux/app/action\";\nimport { getOldProduct } from \"../Redux/auth/action\";\nimport { StyledProductCard } from \"../Styled/styledComponents\";\n\nexport default function Dashboard() {\n  const { product, isError, isLoading, isAuth } = useSelector((state) => ({\n    product: state.app.product,\n    isLoading: state.app.isLoading,\n    isError: state.app.isError,\n    isAuth: state.auth.isAuth,\n  }));\n\n  const handleAddToCart = (item) => {\n    dispatch(addProductCart(item));\n  };\n\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(getProduct());\n    if (isAuth) {\n      dispatch(getOldProduct());\n    }\n  }, []);\n  return (\n    <div style={{ display: \"flex\", flexWrap: \"wrap\" }}>\n      {product.map((pro) => (\n        <StyledProductCard key={pro.id}>\n          <img src={pro.image} alt={pro.name} />\n          <h1>Name: {pro.title}</h1>\n          <h3>Category: {pro.category}</h3>\n          <h3>Rating: {pro.rating}</h3>\n          <button onClick={() => handleAddToCart(pro)}>Add To Cart</button>\n        </StyledProductCard>\n      ))}\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}