{"ast":null,"code":"import { loginNetworkRequest } from \"../../Network/network\";\nimport { GET_LOGIN_FAILED, GET_LOGIN_REQUEST, GET_LOGIN_SUCCESS } from \"./actionType\";\nexport const getLogin = (email, password) => dispatch => {\n  dispatch(getLoginRequest());\n  loginNetworkRequest(email, password).then(res => dispatch(getLoginSuccess(res.data.token))).catch(() => dispatch(getLoginFailed()));\n};\n\nconst getLoginRequest = () => {\n  return {\n    type: GET_LOGIN_REQUEST\n  };\n};\n\nconst getLoginFailed = () => {\n  return {\n    type: GET_LOGIN_FAILED\n  };\n};\n\nconst getLoginSuccess = payload => {\n  console.log(payload);\n  return {\n    type: GET_LOGIN_SUCCESS,\n    payload\n  };\n};","map":{"version":3,"sources":["/home/ellu/Practice/fullStackPractice/frontend/src/Redux/auth/action.js"],"names":["loginNetworkRequest","GET_LOGIN_FAILED","GET_LOGIN_REQUEST","GET_LOGIN_SUCCESS","getLogin","email","password","dispatch","getLoginRequest","then","res","getLoginSuccess","data","token","catch","getLoginFailed","type","payload","console","log"],"mappings":"AAAA,SAASA,mBAAT,QAAoC,uBAApC;AACA,SACEC,gBADF,EAEEC,iBAFF,EAGEC,iBAHF,QAIO,cAJP;AAMA,OAAO,MAAMC,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAsBC,QAAD,IAAc;AACzDA,EAAAA,QAAQ,CAACC,eAAe,EAAhB,CAAR;AACAR,EAAAA,mBAAmB,CAACK,KAAD,EAAQC,QAAR,CAAnB,CACGG,IADH,CACSC,GAAD,IAASH,QAAQ,CAACI,eAAe,CAACD,GAAG,CAACE,IAAJ,CAASC,KAAV,CAAhB,CADzB,EAEGC,KAFH,CAES,MAAMP,QAAQ,CAACQ,cAAc,EAAf,CAFvB;AAGD,CALM;;AAOP,MAAMP,eAAe,GAAG,MAAM;AAC5B,SAAO;AAAEQ,IAAAA,IAAI,EAAEd;AAAR,GAAP;AACD,CAFD;;AAGA,MAAMa,cAAc,GAAG,MAAM;AAC3B,SAAO;AAAEC,IAAAA,IAAI,EAAEf;AAAR,GAAP;AACD,CAFD;;AAGA,MAAMU,eAAe,GAAIM,OAAD,IAAa;AACnCC,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,SAAO;AAAED,IAAAA,IAAI,EAAEb,iBAAR;AAA2Bc,IAAAA;AAA3B,GAAP;AACD,CAHD","sourcesContent":["import { loginNetworkRequest } from \"../../Network/network\";\nimport {\n  GET_LOGIN_FAILED,\n  GET_LOGIN_REQUEST,\n  GET_LOGIN_SUCCESS,\n} from \"./actionType\";\n\nexport const getLogin = (email, password) => (dispatch) => {\n  dispatch(getLoginRequest());\n  loginNetworkRequest(email, password)\n    .then((res) => dispatch(getLoginSuccess(res.data.token)))\n    .catch(() => dispatch(getLoginFailed()));\n};\n\nconst getLoginRequest = () => {\n  return { type: GET_LOGIN_REQUEST };\n};\nconst getLoginFailed = () => {\n  return { type: GET_LOGIN_FAILED };\n};\nconst getLoginSuccess = (payload) => {\n  console.log(payload);\n  return { type: GET_LOGIN_SUCCESS, payload };\n};\n"]},"metadata":{},"sourceType":"module"}